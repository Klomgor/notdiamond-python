interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Tell me a joke"}], "llm_providers":
      [{"provider": "openai", "model": "gpt-4o-2024-08-06", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}], "metric":
      "accuracy", "max_model_depth": 1, "hash_content": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '304'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/modelRouter/modelSelect
  response:
    body:
      string: '{"providers":[{"provider":"openai","model":"gpt-4o-2024-08-06"}],"session_id":"a50499c8-2f0e-4b67-a73e-45760aaac0ca"}'
    headers:
      CF-RAY:
      - 9258a8bfdd715a4a-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:43:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '117'
      rndr-id:
      - 72a7e93c-4172-49ad
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "The output should be formatted as a JSON instance
      that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\":
      {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\":
      \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe
      object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema.
      The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere
      is the output schema:\n```\n{\"properties\": {\"setup\": {\"description\": \"question
      to set up a joke\", \"title\": \"Setup\", \"type\": \"string\"}, \"punchline\":
      {\"description\": \"answer to resolve the joke\", \"title\": \"Punchline\",
      \"type\": \"string\"}}, \"required\": [\"setup\", \"punchline\"]}\n```\nTell
      me a joke", "role": "user"}], "model": "gpt-4o-2024-08-06", "max_tokens": 200,
      "n": 1, "stream": false, "temperature": 0.7}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '939'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.3
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-BEi014gBNvTZGKg2MGENVcq5i1XWL\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1742845425,\n  \"model\": \"gpt-4o-2024-08-06\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"```json\\n{\\n  \\\"setup\\\": \\\"Why
        don't scientists trust atoms?\\\",\\n  \\\"punchline\\\": \\\"Because they
        make up everything!\\\"\\n}\\n```\",\n        \"refusal\": null,\n        \"annotations\":
        []\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
        \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 200,\n    \"completion_tokens\":
        31,\n    \"total_tokens\": 231,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
        0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
        {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
        0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
        \"default\",\n  \"system_fingerprint\": \"fp_6ec83003ad\"\n}\n"
    headers:
      CF-RAY:
      - 9258a8c45cdfd103-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:43:46 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=5lAas1O2BDDFo4c7P2MBtdw5mQXbzZYtYXNJPHnjmEs-1742845426-1.0.1.1-XubzbESxHA8GipPaZuM57ABm9HEDScjkUqfTK1xYEsUkXWluUovPG7zXdgfU2bbQhMOg7AL3WBJ.WtP.HPWD2NQv6ADg3.G8zCcie3Sm3Xc;
        path=/; expires=Mon, 24-Mar-25 20:13:46 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=.RZByxAvI6OZ.uqhdizyCcOvymYeAxGOeB1Xw1S0ohg-1742845426001-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '930'
      openai-organization:
      - not-diamond-bdz8cg
      openai-processing-ms:
      - '501'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '50000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '49999'
      x-ratelimit-remaining-tokens:
      - '149999819'
      x-ratelimit-reset-requests:
      - 1ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_c594110ea1602f918cd51be41f6d222a
    status:
      code: 200
      message: OK
version: 1
