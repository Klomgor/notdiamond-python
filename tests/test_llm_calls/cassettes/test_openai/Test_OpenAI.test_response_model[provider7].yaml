interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Tell me a joke"}], "llm_providers":
      [{"provider": "openai", "model": "gpt-4-turbo-2024-04-09", "is_custom": false,
      "context_length": null, "input_price": null, "output_price": null, "latency":
      null}], "metric": "accuracy", "max_model_depth": 1, "hash_content": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '309'
      User-Agent:
      - Python-SDK/0.4.3
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/modelRouter/modelSelect
  response:
    body:
      string: '{"providers":[{"provider":"openai","model":"gpt-4-turbo-2024-04-09"}],"session_id":"0e8f9065-8d27-4075-9753-31dfe6dd3a1f"}'
    headers:
      CF-RAY:
      - 947c74d32b17f937-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Fri, 30 May 2025 07:18:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '122'
      rndr-id:
      - fee9349c-efde-4338
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages":[{"content":"The output should be formatted as a JSON instance
      that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\":
      {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\":
      \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe
      object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema.
      The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere
      is the output schema:\n```\n{\"properties\": {\"setup\": {\"description\": \"question
      to set up a joke\", \"title\": \"Setup\", \"type\": \"string\"}, \"punchline\":
      {\"description\": \"answer to resolve the joke\", \"title\": \"Punchline\",
      \"type\": \"string\"}}, \"required\": [\"setup\", \"punchline\"]}\n```\nTell
      me a joke","role":"user"}],"model":"gpt-4-turbo-2024-04-09","max_completion_tokens":200,"stream":false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '917'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.70.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.70.0
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.12
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-BcoIJWTefiCybssCM2toJfweszMLJ\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1748589495,\n  \"model\": \"gpt-4-turbo-2024-04-09\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"```json\\n{\\n  \\\"setup\\\": \\\"What
        do you call fake spaghetti?\\\",\\n  \\\"punchline\\\": \\\"An impasta!\\\"\\n}\\n```\",\n
        \       \"refusal\": null,\n        \"annotations\": []\n      },\n      \"logprobs\":
        null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
        200,\n    \"completion_tokens\": 29,\n    \"total_tokens\": 229,\n    \"prompt_tokens_details\":
        {\n      \"cached_tokens\": 0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
        {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
        0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
        \"default\",\n  \"system_fingerprint\": \"fp_de235176ee\"\n}\n"
    headers:
      CF-RAY:
      - 947c74d88f68d0ca-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Fri, 30 May 2025 07:18:16 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=_5PXxdCeXpAIbxhvTGQnMvEMTIHb.mYnqXcqWy6sVQg-1748589496-1.0.1.1-y3oNK2adHFNNitsB3qeZF2RWzkv4Bm8UFN4nWymuZcYYMdJHsakgHc8yxgAeVTNjD8dU6Xn4kxi0m.dZUmiHQzF43Hs3bUcOEHqQplIp_yk;
        path=/; expires=Fri, 30-May-25 07:48:16 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=z9j34gC05NTSZvqJ3WWIbfYBq5ef.nUPnyDThK7IYks-1748589496555-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '913'
      openai-organization:
      - not-diamond-bdz8cg
      openai-processing-ms:
      - '1257'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '1265'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999819'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 5ms
      x-request-id:
      - req_b5d830069fd7e206cfcc4855d8ef0d0a
    status:
      code: 200
      message: OK
version: 1
