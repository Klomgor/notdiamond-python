interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are a world class programmer."},
      {"role": "user", "content": "Write a merge sort in Python"}], "llm_providers":
      [{"provider": "openai", "model": "gpt-3.5-turbo", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "openai", "model": "gpt-4", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}, {"provider": "openai", "model":
      "gpt-4-1106-preview", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}, {"provider": "openai", "model":
      "gpt-4-turbo-preview", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}, {"provider": "anthropic", "model":
      "claude-3-haiku-20240307", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}, {"provider": "anthropic", "model":
      "claude-3-sonnet-20240229", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}, {"provider": "anthropic", "model":
      "claude-3-opus-20240229", "is_custom": false, "context_length": null, "input_price":
      null, "output_price": null, "latency": null}], "metric": "accuracy", "max_model_depth":
      7, "hash_content": false, "tradeoff": "cost"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '1369'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/modelRouter/modelSelect
  response:
    body:
      string: '{"providers":[{"provider":"openai","model":"gpt-4-1106-preview"}],"session_id":"17912bb5-92a1-4f61-9d02-5562edc28940"}'
    headers:
      CF-RAY:
      - 9258953e5943d0f0-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '118'
      rndr-id:
      - b2bb99e0-28b8-46ed
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a world class programmer.", "role":
      "system"}, {"content": "Write a merge sort in Python", "role": "user"}], "model":
      "gpt-4-1106-preview", "n": 1, "stream": false, "temperature": 0.7}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '219'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.3
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-BEhn8BI8mCVeW6xuXSpvTPvOuIoFV\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1742844626,\n  \"model\": \"gpt-4-1106-preview\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"Certainly! Below is an implementation
        of the merge sort algorithm in Python:\\n\\n```python\\ndef merge_sort(arr):\\n
        \   if len(arr) > 1:\\n        mid = len(arr) // 2  # Finding the mid of the
        array\\n        left_half = arr[:mid]  # Dividing the array elements into
        2 halves\\n        right_half = arr[mid:]\\n\\n        merge_sort(left_half)
        \ # Sorting the first half\\n        merge_sort(right_half)  # Sorting the
        second half\\n\\n        # Merging the sorted halves\\n        merge(arr,
        left_half, right_half)\\n\\ndef merge(arr, left_half, right_half):\\n    i
        = j = k = 0\\n\\n    # Copy data to temp arrays left_half[] and right_half[]\\n
        \   while i < len(left_half) and j < len(right_half):\\n        if left_half[i]
        < right_half[j]:\\n            arr[k] = left_half[i]\\n            i += 1\\n
        \       else:\\n            arr[k] = right_half[j]\\n            j += 1\\n
        \       k += 1\\n\\n    # Checking if any element was left\\n    while i <
        len(left_half):\\n        arr[k] = left_half[i]\\n        i += 1\\n        k
        += 1\\n\\n    while j < len(right_half):\\n        arr[k] = right_half[j]\\n
        \       j += 1\\n        k += 1\\n\\n    return arr\\n\\n# Example usage:\\nif
        __name__ == \\\"__main__\\\":\\n    arr = [12, 11, 13, 5, 6, 7]\\n    print(\\\"Given
        array is\\\", end=\\\"\\\\n\\\")\\n    print(arr)\\n    merge_sort(arr)\\n
        \   print(\\\"Sorted array is: \\\", end=\\\"\\\\n\\\")\\n    print(arr)\\n```\\n\\nThis
        code defines two functions:\\n\\n1. `merge_sort(arr)`: This is the main function
        that takes an array `arr` and performs the merge sort algorithm. It recursively
        splits the array into halves until the subarrays contain only one element.
        Then, it starts merging them back together in the correct order.\\n\\n2. `merge(arr,
        left_half, right_half)`: This function is used by `merge_sort` to merge two
        sorted subarrays, `left_half` and `right_half`, into a single sorted array
        `arr`.\\n\\nThe example at the bottom of the script demonstrates how to use
        the `merge_sort` function. It sorts the array `[12, 11, 13, 5, 6, 7]` and
        prints the sorted array.\",\n        \"refusal\": null,\n        \"annotations\":
        []\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
        \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 24,\n    \"completion_tokens\":
        518,\n    \"total_tokens\": 542,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
        0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
        {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
        0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
        \"default\",\n  \"system_fingerprint\": null\n}\n"
    headers:
      CF-RAY:
      - 925895436a7f5acf-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:38 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=4jxMfr57gxMBlXbXam2qZOO1h5PWKbF3T2xnsFAXH2Y-1742844638-1.0.1.1-e9SY97bxHwC.5zvINW9U2z3tJcGTO.RoWU0kNmWzWnZPp3WsKh1NyiYJdfrWhOwur8WW_4uN9JvwPkVcT34liWh48IliqWiSwfrW7cQ4yxU;
        path=/; expires=Mon, 24-Mar-25 20:00:38 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=SShCZGgELA390N96qqEm4gj5nM7oNVmXQ5jC85qPXJw-1742844638857-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '2792'
      openai-organization:
      - not-diamond-bdz8cg
      openai-processing-ms:
      - '12184'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999980'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_94926f643eafadf7cc84af148135f9f3
    status:
      code: 200
      message: OK
- request:
    body: '{"session_id": "17912bb5-92a1-4f61-9d02-5562edc28940", "provider": {"provider":
      "openai", "model": "gpt-4-1106-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, "feedback":
      {"tokens_per_second": 41.83543988731882}}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '279'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/report/metrics/latency
  response:
    body:
      string: '{"detail":"requestID=0bd78518-685b-469a, Session 17912bb5-92a1-4f61-9d02-5562edc28940
        does not belong to user d6b6f4db-9cd9-4a33-b885-506685cd2d34."}'
    headers:
      CF-RAY:
      - 92589591ba3acb7b-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:39 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      rndr-id:
      - 0bd78518-685b-469a
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 401
      message: Unauthorized
version: 1
