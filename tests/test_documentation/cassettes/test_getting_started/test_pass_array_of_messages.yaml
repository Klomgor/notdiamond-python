interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are a world class software
      developer."}, {"role": "user", "content": "Write a merge sort in Python"}],
      "llm_providers": [{"provider": "openai", "model": "gpt-3.5-turbo", "is_custom":
      false, "context_length": null, "input_price": null, "output_price": null, "latency":
      null}, {"provider": "openai", "model": "gpt-4", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "openai", "model": "gpt-4-1106-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "openai", "model": "gpt-4-turbo-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-haiku-20240307", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-sonnet-20240229", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-opus-20240229", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}], "metric":
      "accuracy", "max_model_depth": 7, "hash_content": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '1357'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/modelRouter/modelSelect
  response:
    body:
      string: '{"providers":[{"provider":"openai","model":"gpt-4-1106-preview"}],"session_id":"64006ca8-7407-46d3-ad56-5cc4e5da96e3"}'
    headers:
      CF-RAY:
      - 925cfd313828197e-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Mar 2025 08:20:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '118'
      rndr-id:
      - 112a0219-fc80-470b
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a world class software developer.",
      "role": "system"}, {"content": "Write a merge sort in Python", "role": "user"}],
      "model": "gpt-4-1106-preview", "n": 1, "stream": false, "temperature": 0.7}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '227'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.3
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-BEtoJKeexgdUkK65YW8C4Jh7PIG0v\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1742890827,\n  \"model\": \"gpt-4-1106-preview\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"Certainly! Below is an implementation
        of the merge sort algorithm in Python:\\n\\n```python\\ndef merge_sort(arr):\\n
        \   \\\"\\\"\\\"\\n    Sort an array using the merge sort algorithm.\\n    :param
        arr: List of elements to be sorted\\n    :return: Sorted list of elements\\n
        \   \\\"\\\"\\\"\\n    if len(arr) <= 1:\\n        return arr\\n\\n    # Divide
        the array into two halves\\n    mid = len(arr) // 2\\n    left_half = arr[:mid]\\n
        \   right_half = arr[mid:]\\n\\n    # Recursively sort both halves\\n    left_sorted
        = merge_sort(left_half)\\n    right_sorted = merge_sort(right_half)\\n\\n
        \   # Merge the sorted halves\\n    return merge(left_sorted, right_sorted)\\n\\ndef
        merge(left, right):\\n    \\\"\\\"\\\"\\n    Merge two sorted lists into one
        sorted list.\\n    :param left: Sorted list\\n    :param right: Sorted list\\n
        \   :return: Merged and sorted list\\n    \\\"\\\"\\\"\\n    merged = []\\n
        \   left_index = right_index = 0\\n\\n    # Merge the two lists together while
        maintaining order\\n    while left_index < len(left) and right_index < len(right):\\n
        \       if left[left_index] <= right[right_index]:\\n            merged.append(left[left_index])\\n
        \           left_index += 1\\n        else:\\n            merged.append(right[right_index])\\n
        \           right_index += 1\\n\\n    # If there are any remaining elements
        in either list, add them to the merged list\\n    # This happens when one
        list is exhausted before the other\\n    merged.extend(left[left_index:])\\n
        \   merged.extend(right[right_index:])\\n\\n    return merged\\n\\n# Example
        usage:\\nif __name__ == \\\"__main__\\\":\\n    array_to_sort = [5, 3, 8,
        6, 2, 7, 4, 1]\\n    sorted_array = merge_sort(array_to_sort)\\n    print(\\\"Sorted
        Array:\\\", sorted_array)\\n```\\n\\nThis `merge_sort` function is a recursive
        algorithm that continuously splits the array in half, sorts each half, and
        then merges the sorted halves back together. The `merge` function is a helper
        function that takes two sorted lists and merges them into a single sorted
        list. When you run the script, it will sort the example array and print out
        the sorted array.\",\n        \"refusal\": null,\n        \"annotations\":
        []\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
        \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 25,\n    \"completion_tokens\":
        461,\n    \"total_tokens\": 486,\n    \"prompt_tokens_details\": {\n      \"cached_tokens\":
        0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
        {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
        0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
        \"default\",\n  \"system_fingerprint\": null\n}\n"
    headers:
      CF-RAY:
      - 925cfd367fa2d0f2-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Mar 2025 08:20:41 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=vfsO7goobxXc4tq1pkP1gftH2DM8n35kYwGW1E6MeY4-1742890841-1.0.1.1-ejJSm1l7yi4Yga_l9leZ_E5.QLZn3VwhBEmr_J.8QkdxCVGcGTEEBfa_3fc_3qPXXX5QGAEzR6iV53EbKl3zA4fCyWWgyGOwziF0Z.iRSLE;
        path=/; expires=Tue, 25-Mar-25 08:50:41 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=rNlw4NkE0wn3UOhs78R.Jb.v31W7Qyv2v.Tlydf7BUA-1742890841611-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '2833'
      openai-organization:
      - not-diamond-bdz8cg
      openai-processing-ms:
      - '14105'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_7c650b522c0c990612197c45bed406ce
    status:
      code: 200
      message: OK
- request:
    body: '{"session_id": "64006ca8-7407-46d3-ad56-5cc4e5da96e3", "provider": {"provider":
      "openai", "model": "gpt-4-1106-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, "feedback":
      {"tokens_per_second": 32.06989394736696}}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '279'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/report/metrics/latency
  response:
    body:
      string: '{"detail":"requestID=38faee3b-c615-4d3a, Session 64006ca8-7407-46d3-ad56-5cc4e5da96e3
        does not belong to user d6b6f4db-9cd9-4a33-b885-506685cd2d34."}'
    headers:
      CF-RAY:
      - 925cfd917bcb5a71-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 25 Mar 2025 08:20:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      rndr-id:
      - 38faee3b-c615-4d3a
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 401
      message: Unauthorized
version: 1
