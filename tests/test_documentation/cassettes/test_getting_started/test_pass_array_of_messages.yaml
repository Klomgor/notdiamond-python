interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are a world class software
      developer."}, {"role": "user", "content": "Write a merge sort in Python"}],
      "llm_providers": [{"provider": "openai", "model": "gpt-3.5-turbo", "is_custom":
      false, "context_length": null, "input_price": null, "output_price": null, "latency":
      null}, {"provider": "openai", "model": "gpt-4", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "openai", "model": "gpt-4-1106-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "openai", "model": "gpt-4-turbo-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-haiku-20240307", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-sonnet-20240229", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, {"provider":
      "anthropic", "model": "claude-3-opus-20240229", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}], "metric":
      "accuracy", "max_model_depth": 7, "hash_content": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '1357'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/modelRouter/modelSelect
  response:
    body:
      string: '{"providers":[{"provider":"openai","model":"gpt-4-1106-preview"}],"session_id":"3356ab52-5760-4af7-92ea-6d254afd5b71"}'
    headers:
      CF-RAY:
      - 925895947c9bc2b9-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '118'
      rndr-id:
      - 5c69b9d9-1b06-4e93
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a world class software developer.",
      "role": "system"}, {"content": "Write a merge sort in Python", "role": "user"}],
      "model": "gpt-4-1106-preview", "n": 1, "stream": false, "temperature": 0.7}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '227'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.3
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-BEhnMYfiWKRlatrny8FF1BYexllLw\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1742844640,\n  \"model\": \"gpt-4-1106-preview\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"Certainly! Below is a Python implementation
        of the merge sort algorithm:\\n\\n```python\\ndef merge_sort(arr):\\n    if
        len(arr) > 1:\\n        mid = len(arr) // 2  # Find the midpoint of the array\\n
        \       L = arr[:mid]  # Dividing the array elements into 2 halves\\n        R
        = arr[mid:]\\n\\n        merge_sort(L)  # Sorting the first half\\n        merge_sort(R)
        \ # Sorting the second half\\n\\n        # Merging the sorted halves\\n        i
        = j = k = 0\\n\\n        # Copy data to temp arrays L[] and R[]\\n        while
        i < len(L) and j < len(R):\\n            if L[i] < R[j]:\\n                arr[k]
        = L[i]\\n                i += 1\\n            else:\\n                arr[k]
        = R[j]\\n                j += 1\\n            k += 1\\n\\n        # Checking
        if any element was left\\n        while i < len(L):\\n            arr[k] =
        L[i]\\n            i += 1\\n            k += 1\\n\\n        while j < len(R):\\n
        \           arr[k] = R[j]\\n            j += 1\\n            k += 1\\n\\n
        \   return arr\\n\\n# Example usage:\\narr = [12, 11, 13, 5, 6, 7]\\nsorted_arr
        = merge_sort(arr)\\nprint(\\\"Sorted array is:\\\", sorted_arr)\\n```\\n\\nThis
        function recursively divides the input list into halves until the base case
        (lists of length 1) is reached, then merges the sorted lists back together.
        The `merge_sort` function is called on the left and right halves, and then
        the `merge` process handles the recombination.\\n\\nYou can test the function
        with the provided example or with your own list of numbers. Just call `merge_sort`
        with your list, and it will return the sorted list.\",\n        \"refusal\":
        null,\n        \"annotations\": []\n      },\n      \"logprobs\": null,\n
        \     \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
        25,\n    \"completion_tokens\": 389,\n    \"total_tokens\": 414,\n    \"prompt_tokens_details\":
        {\n      \"cached_tokens\": 0,\n      \"audio_tokens\": 0\n    },\n    \"completion_tokens_details\":
        {\n      \"reasoning_tokens\": 0,\n      \"audio_tokens\": 0,\n      \"accepted_prediction_tokens\":
        0,\n      \"rejected_prediction_tokens\": 0\n    }\n  },\n  \"service_tier\":
        \"default\",\n  \"system_fingerprint\": null\n}\n"
    headers:
      CF-RAY:
      - 92589599fd855a9b-VIE
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:53 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=F6X85kbq25ncTwWgxYcndMP35D66Kvc2NvniiIiy4kQ-1742844653-1.0.1.1-GocKeLdhhGciZbF2XBr1pMsNbuHXeesACGwUtA3W5t6K9Hi_3Fqqd2y43VAH8ZUxyCn33MO4pqO7CA4xaB5WPs.hvSsDnn5UD_bIZgWoSqM;
        path=/; expires=Mon, 24-Mar-25 20:00:53 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=NnfhGGQrYDL7pylKW3LgAiXOcM.U5X2Em8MAcqdeoc0-1742844653977-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '2335'
      openai-organization:
      - not-diamond-bdz8cg
      openai-processing-ms:
      - '13507'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_270d810e9a059c5a4f9fc1b7ca3d989e
    status:
      code: 200
      message: OK
- request:
    body: '{"session_id": "3356ab52-5760-4af7-92ea-6d254afd5b71", "provider": {"provider":
      "openai", "model": "gpt-4-1106-preview", "is_custom": false, "context_length":
      null, "input_price": null, "output_price": null, "latency": null}, "feedback":
      {"tokens_per_second": 27.852296609401865}}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, zstd
      Connection:
      - keep-alive
      Content-Length:
      - '280'
      User-Agent:
      - Python-SDK/0.3.41
      content-type:
      - application/json
    method: POST
    uri: https://staging-api.notdiamond.ai/v2/report/metrics/latency
  response:
    body:
      string: '{"detail":"requestID=78b5dd8c-9566-443b, Session 3356ab52-5760-4af7-92ea-6d254afd5b71
        does not belong to user d6b6f4db-9cd9-4a33-b885-506685cd2d34."}'
    headers:
      CF-RAY:
      - 925895f0282ed0fb-SOF
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 24 Mar 2025 19:30:54 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      rndr-id:
      - 78b5dd8c-9566-443b
      vary:
      - Accept-Encoding
      x-render-origin-server:
      - uvicorn
    status:
      code: 401
      message: Unauthorized
version: 1
